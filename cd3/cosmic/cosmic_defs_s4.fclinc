// This file contains the common part of job configuration for stage 4
// cosmic ray simulations.  It is included by top level files
// (like cosmic_s4_target1.fcl), which define output file names.
// 
// Ralf Ehrlich, 2015

#include "minimalMessageService.fcl"
#include "standardServices.fcl"
#include "CRVResponse/test/prolog.fcl"

process_name : CRVResponse

source :
{
  module_type : RootInput
}

services :
{
  RandomNumberGenerator: { }
  user :
  {
    GeometryService        : { inputFile      : "JobConfig/cd3/cosmic/geom_cosmic.txt" }
    ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
    GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
    SeedService            : @local::automaticSeeds
  }
}

physics :
{
  producers:
  {
    protonTimeMap: { module_type : GenerateProtonTimes }
    muonTimeMap: { module_type : GenerateMuonLife }

    CrvPhotonArrivals: @local::CrvPhotonArrivals
    CrvSiPMResponses : @local::CrvSiPMResponses
    CrvWaveforms     : @local::CrvWaveforms
    CrvRecoPulses    : @local::CrvRecoPulses
    CrvCoincidence   : @local::CrvCoincidence
  }

  an : [protonTimeMap, muonTimeMap, CrvPhotonArrivals, CrvSiPMResponses, CrvWaveforms, CrvRecoPulses, CrvCoincidence]
  out: [Output]

  end_paths: [an, out]
}

physics.producers.CrvPhotonArrivals.g4ModuleLabels : ["*"]
physics.producers.CrvPhotonArrivals.processNames   : ["*"]

outputs: 
{
    Output : 
    {
        module_type : RootOutput
    }
}

// Limit the amount of "Begin processing the ... record" messages
services.message.destinations.log.categories.ArtReport.reportEvery : 1
services.message.destinations.log.categories.ArtReport.limit : 1
services.message.destinations.log.categories.ArtReport.timespan : 300

services.user.SeedService.baseSeed         :  773651
services.user.SeedService.maxUniqueEngines :  20

// We guarantee that our subruns are atomic. The following line is to not run out of memory.
services.scheduler.fileMode: MERGE

