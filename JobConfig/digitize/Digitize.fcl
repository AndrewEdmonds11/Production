#
#  Digitization simulations
#
#include "JobConfig/digitize/prolog.fcl"
# name all processes the same, to mask any provenance in ensemble creation
process_name: Digitize
source : { module_type : RootInput }
services : @local::Services.SimAndReco # reco is needed for the trigger
physics : { 
  producers : {
    @table::Digitize.producers
    @table::Trigger.producers 
  }
  filters: { 
    @table::Digitize.filters 
    @table::Trigger.filters
  }
  # setup 'trigger reject' stream after RejectEvents is implemented TODO!
  analyzers: { @table::Digitize.analyzers }
  DigitizePath : @local::Digitize.DigitizePath
  EndPath : @local::Digitize.EndPath
}
#
outputs : { 
  Output :@local::Digitize.Output
}
#
# Final configuration
#
#include "JobConfig/common/epilog.fcl"
#include "JobConfig/digitize/epilog.fcl"
#
physics.trigger_paths[0] : DigitizePath
physics.end_paths : [ EndPath ]
# generic output: this is overwritten by generate_fcl
outputs.Output.fileName: "dig.owner.description.version.sequencer.art"
