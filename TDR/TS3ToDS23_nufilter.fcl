// This is a special version of TS3ToDS23 that discards neutrino hits
// that were recorded by the 1006a g4s1 jobs.
//
// Andrei Gaponenko, 2013

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

# Give this job a name.
process_name : TS3ToDS23

source : { module_type : RootInput }

services : {

    message               : @local::default_message
    TFileService          : { fileName : "histTS3ToDS23.root" }
    RandomNumberGenerator : { }

    user : {
        GeometryService        : { inputFile      : "JobConfig/TDR/geom_TS3ToDS23.txt" }
        ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
        GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
        G4Helper               : { }
        SeedService            : @local::automaticSeeds
    }
}

physics : {
    producers: {

        g4run : {
            module_type          : G4
            inputSimParticles : "g4filter:s0"
            simParticleNumberOffset : 100000 // safe b/c of g4.particlesSizeLimit in stage1

            generatorModuleLabel : ""
            genInputHits : [ "nufilter:TS3Vacuum" ]

            doWriteLegacyPhysVolumeInfo : false
            inputPhysVolumeMultiInfoLabel : "compressPV"

            SDConfig : {
                enableSD : [ virtualdetector, CRV ] // activate just the explicitly listed SDs
                sensitiveVolumes: [ DS2Vacuum, DS3Vacuum ]
                preSimulatedHits: ["nufilter:virtualdetector",
                                   "nufilter:DS2Vacuum",
                                   "nufilter:DS3Vacuum",
                                   "nufilter:CRV" ]
            }

            SimParticlePrinter : {
                enabled : false
                primariesOnly : false
                prefix : "SimParticle: "
            }
        }

        compressPV : {
            module_type: CompressPhysicalVolumes
            volumesInput : "g4run"
            hitInputs : []
            particleInputs : [ "g4filter:s0" ]
        }

        compressPVFull : {
            module_type: CompressPhysicalVolumes
            volumesInput : "g4run"
            hitInputs : []
            particleInputs : [ "g4run" ]
        }
    }

    filters: {
        nufilter: {
            module_type: FilterStepPointPDG
            inputs : [ "g4filter:TS3Vacuum",
                       "g4filter:virtualdetector",
                       "g4filter:DS2Vacuum",
                       "g4filter:DS3Vacuum",
                       "g4filter:CRV"
                     ]
            pdgToDrop : [ 12, -12, 14, -14, 16, -16 ]
        }

        g4filter: {
            module_type: FilterG4Out
            mainHitInputs : [ "g4run:DS2Vacuum", "g4run:DS3Vacuum", "g4run:CRV" ]
            extraHitInputs : [ "g4run:virtualdetector" ]
            numSimParticleCollections : 1
            vetoDaughters: []
        }
        g4status: {
            module_type: FilterStatusG4
            input: "g4run"
        }
    }

    analyzers: {
        genCountLogger: {
            module_type: GenEventCountReader
        }
    }

    trigFilter : [nufilter, g4run, g4filter, compressPV]
    g4StatusFilter : [nufilter, g4run, "!g4status", compressPVFull]
    trigger_paths  : [trigFilter, g4StatusFilter]

    //e1 : [filteredOutput, filteredEvtsOutput, fullOutput]
    e1 : [filteredOutput, truncatedEvtsOutput, genCountLogger]
    end_paths      : [e1]
}

outputs: {
    filteredOutput : {
        module_type : RootOutput
        SelectEvents: { SelectEvents: ["trigFilter"] }
        outputCommands:   [ "drop *_*_*_*",
                            "keep mu2e::GenParticles_*_*_*",
                            "keep mu2e::GenEventCount_*_*_*",
                            "keep mu2e::StatusG4_*_*_*",
                            "keep *_g4filter_*_TS3ToDS23",
                            "keep *_compressPV_*_TS3ToDS23"
                          ]
        fileName    : "dataTS3ToDS23.root"
    }

    truncatedEvtsOutput : {
        module_type : RootOutput
        SelectEvents: { SelectEvents: [g4StatusFilter] }


        outputCommands:   [ "drop *_*_*_*",
                            "keep mu2e::GenParticles_*_*_*",
                            "keep mu2e::GenEventCount_*_*_*",
                            "keep mu2e::StatusG4_*_*_*",
                            "keep *_g4run_*_*",
                            "drop uintmu2e::PhysicalVolumeInfomvstd::pairs_*_*_*",
                            "keep *_compressPVFull_*_TS3ToDS23"
                          ]
        fileName    : "truncatedTS3ToDS23.root"
    }

    fullOutput : {
        module_type : RootOutput
        fileName    : "dataTS3ToDS23_full.root"
    }
}

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.SeedService.baseSeed         :  0
services.SeedService.maxUniqueEngines :  20
