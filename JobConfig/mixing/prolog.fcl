# mixing is a special case of digitization, this file just configures the
# aspects unique to mixing
#  Below are the options for mixing (these are hard to find!)
#     sequential -- read the secondary events in order
#     randomReplace -- random with replacement
#     randomLimReplace -- events unique within a primary event
#     randomNoReplace -- events guaranteed to be used once only.
#include "CommonMC/fcl/prolog.fcl"
#include "TrackerMC/fcl/prolog.fcl"
#include "CaloMC/fcl/prolog.fcl"

BEGIN_PROLOG

# mixer configuration
Mixing : {
# DetectorStep mixer
  DetStepMixer: {
    module_type         : MixBackgroundFrames
    fileNames           : @nil
    readMode            : sequential
    wrapFiles           : true
    mu2e: {
      protonBunchIntensityTag: "PBISim"
      meanEventsPerProton: @nil
      simStageEfficiencyTags: @nil
      products: {
        genParticleMixer: { mixingMap: [ [ "compressDetStepMCs", "" ] ] }
        simParticleMixer: { mixingMap: [ [ "compressDetStepMCs", "" ] ] }
        strawGasStepMixer: { mixingMap: [ [ "compressDetStepMCs", "" ] ] }
        caloShowerStepMixer: { mixingMap: [ [ "compressDetStepMCs", "" ] ] }
        crvStepMixer: { mixingMap: [ [ "compressDetStepMCs", "" ] ] }
      }
# skip a random number of mixin events between 0 and this factor times the number corresponding to the nominal pulse.
      skipFactor : 1
    }
  }
}
Mixing : {
  filters : {
# mixers for muon stop pileup, beamflash pileup, and neutrals flash pileup
    MuStopPileupMixer : @local::Mixing.DetStepMixer 
    BeamFlashMixer : @local::Mixing.DetStepMixer 
    NeutralsFlashMixer : @local::Mixing.DetStepMixer 
# filter for signal or calibration-like particles that can pass the trigger.  This is mainly for cosmics
    SignalFilter : {
      module_type : DetectorStepFilter
      MinimumTrkStepEnergy : 1.0e-6 # 1 ev
      KeepPDG : [ ] # Loop at steps from all particle types
      CaloShowerSteps: []
      CrvSteps: []
      StrawGasSteps: [ compressDetStepMCs ]
      MinimumPartMom : 50.0 # MeV/c
      MaximumPartMom : 250.0 # MeV/c
      MinimumTrkSteps : 10 # primary must produce at least this many StrawGasSteps
      # add a calo selection for primaries that produce only neutrals (for calibration)
    }
  }
  PileupMixSequence : [ PBISim, MuStopPileupMixer, BeamFlashMixer, NeutralsFlashMixer ]
}
# override the Trigger 'PrepareDigis' sequence; the mixers must preceed the digi making.  Note CRV doesn't participate in trigger, so isn't included
Trigger.PrepareDigis: [ @sequence::Mixing.PileupMixSequence, @sequence::CommonMC.DigiSim, @sequence::TrackerMC.DigiSim, @sequence::CaloMC.DigiSim ]
# LogNormal proton bunch intensity.  Specific values must be provided based on physics conditions
Digitize.producers.PBISim : {  
  module_type: ProtonBunchIntensityLogNormal
  sigma: @nil
  extendedMean: @nil
  cutMax:@nil
}

END_PROLOG
