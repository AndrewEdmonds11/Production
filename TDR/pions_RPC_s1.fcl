# Configuration file for RPCs

# $Id: pions_RPC_s1.fcl,v 1.1 2014/02/25 18:42:36 knoepfel Exp $
# $Author: knoepfel $
# $Date: 2014/02/25 18:42:36 $

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

process_name : RPCs1

source : {
  module_type : EmptyEvent
}

services :
{
  message               : @local::default_message
  TFileService          : { fileName: "piCapture_RPC_s1.root" }
  RandomNumberGenerator : { }

  user :
  {
    GeometryService   : { inputFile : "Mu2eG4/test/geom_01.txt" }
    ConditionsService : { conditionsfile : "Mu2eG4/test/conditions_01.txt" }
    GlobalConstantsService : { inputFile : "Mu2eG4/test/globalConstants_01.txt" }
    G4Helper          : { }
    SeedService       : @local::automaticSeeds
  }

}

physics : {

  producers: {

    generate : {

        module_type : StoppedParticleRPCGun

        pionStops: {
           inputFiles: @nil
           averageNumRecordsToUse: 500000
           treeName: "stoppedPionDumper/stops"
           branchName: "stops"
           verbosityLevel : 1
        }
        
        physics : {
   	   spectrumResolution: 0.001
  	   elow : 100
  	   ehi  : 140
  	   spectrumShape   : Bistirlich
     	}

    }

    genEventCount : {
        module_type : GenEventCounter
    }

    g4run : {
        module_type          : G4
        simParticleNumberOffset : 400000
        generatorModuleLabel : "generate"
        doWriteLegacyPhysVolumeInfo : false
        SDConfig : {
            // do not want e.g. the "stoppingtarget" SD, thus do not use enableAllSDs
            // Instead explicitly list all the detectors we want
            enableSD : [ tracker, calorimeter, calorimeterRO, CRV, virtualdetector ]
            sensitiveVolumes: []
        }
    
        SimParticlePrinter : {
            enabled : false
            primariesOnly : false
            prefix : "SimParticle: "
        }
    }

  } // producers

  //==========================================================================
  filters: {
        
        detectorFilter: {

	    module_type: FilterStepPointMomentum
            inputs: [ "g4run:tracker", "g4run:calorimeter", "g4run:calorimeterRO"]
            cutMomentumMin : 10. // MeV/c

        }

  } //filters

  //==========================================================================
  p1 : [ generate, genEventCount, g4run, detectorFilter ]
  e1 : [ detectorOutput ]

  trigger_paths  : [p1]
  end_paths      : [e1]

}

outputs: {
    detectorOutput : {
        module_type : RootOutput
        SelectEvents: { SelectEvents: [p1] }
        fileName    : @nil
    }
}

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.user.SeedService.baseSeed         :  0
services.user.SeedService.maxUniqueEngines :  20

outputs.detectorOutput.fileName: "dsStopsToHitsRPCs.root"
