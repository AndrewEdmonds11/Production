//
// mono-energetic e- at the Al Ce endpoint with background mixing
//
#  Dave Brown (LBNL) june 2018
#
#include "JobConfig/beam/prolog-bgFrameMixing.fcl"
process_name: CeEndpoint

source: { module_type : EmptyEvent }

services: @local::Services.Sim
physics : { 
  producers : {
    generate : @local::CeEndpointGun
    g4run : @local::mu2e.physics.producers.g4run.muons
    genCounter: { module_type: GenEventCounter }
    @table::EventGenerator.producers
    # dedicated digi maker for filter
    protonTimeMapPreFilter: { module_type : GenerateProtonTimes }
    muonTimeMapPreFilter: { module_type : GenerateMuonLife }
    makeSDPreFilter:{
      @table::makeSD
      TimeOffsets : {
	inputs : [ "protonTimeMapPreFilter", "muonTimeMapPreFilter" ]
      }
    }
    @table::CommonDigiSim.producers
    @table::TrackerMC.producers
    @table::CaloDigiMC.producers
    @table::CrvDAQPackage.producers
    compressDigiMCs : @local::DigiCompress
  }
  filters: {
    TrkDigiFilter : {
      module_type : StrawDigiMCFilter
      MinNDigis : 10
      MinParticleMom : 95.0
      particleTypes : [11]
      StrawDigiMCCollection : "makeSDPreFilter"
    }
    @table::MDC2018Mixers.filters
   }
  analyzers: {
    genCountLogger: { module_type: GenEventCountReader makeHistograms: false }
  }
  CeEndpointPath : [ generate, genCounter, g4run,
    protonTimeMapPreFilter, muonTimeMapPreFilter,
    makeSDPreFilter,
    TrkDigiFilter,
    protonBunchIntensity,
    @sequence::MDC2018Mixers.sequence,
    @sequence::CommonDigiSim.DigiSim,
    @sequence::TrackerMC.DigiSim,
    @sequence::CaloDigiMC.DigiSim,
    @sequence::CrvDAQPackage.CrvResponseSequence,
    compressDigiMCs
  ]
}
outputs: {
   CeEndpointOutput : {
     module_type : RootOutput
     SelectEvents : [ CeEndpointPath ]
     fileName    : @nil
     outputCommands : @local::DigiCompressOutputCommands
  }
}
# MDC2018 values 
# TrkCal
#include "JobConfig/beam/mixepilog.fcl"
services.TFileService.fileName: "nts.owner.CeEndpoint-mix.version.sequencer.root"
outputs.CeEndpointOutput.fileName: "sim.owner.CeEndpoint-mix.version.sequencer.art"
physics.out : [ genCountLogger, CeEndpointOutput ]
physics.end_paths : [ out ] # needed for generate_fcl
