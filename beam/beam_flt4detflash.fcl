// Andrei Gaponenko, 2014, 2015

#include "fcl/minimalMessageService.fcl"
#include "fcl/standardProducers.fcl"
#include "fcl/standardServices.fcl"

BEGIN_PROLOG
stepPointTimeCut: 200
END_PROLOG


# Give this job a name.
process_name : flash-cut

source : {
   module_type : RootInput
   readParameterSets: false
}

services : {
    TFileService          : { fileName : "nts.owner.flash-cut.version.sequencer.root" }
    message               : @local::default_message
}

physics : {

    //================================================================
    producers: {
        trackerHits: {
	    module_type: SelectStepPointsByTime
	    input: "detectorFilter:tracker"
	    outInstanceName: "tracker"
	    cutTimeMin: @local::stepPointTimeCut
	}

        caloHits: {
	    module_type: SelectStepPointsByTime
	    input: "detectorFilter:calorimeter"
	    outInstanceName: "calorimeter"
	    cutTimeMin: @local::stepPointTimeCut
	}

        caloROHits: {
	    module_type: SelectStepPointsByTime
	    input: "detectorFilter:calorimeterRO"
	    outInstanceName: "calorimeterRO"
	    cutTimeMin: @local::stepPointTimeCut
	}

        compressPVDetector: {
            module_type: CompressPhysicalVolumes
            volumesInput : "compressPVDetector"
            hitInputs : []
            particleInputs : [ "detectorFilter" ]
        }
    } // producers

    //================================================================
    filters: {
        detectorFilter: {
            module_type: FilterG4Out
            mainHitInputs: [ "trackerHits:tracker", "caloHits:calorimeter", "caloROHits:calorimeterRO"]
            extraHitInputs: [ "detectorFilter:virtualdetector" ]
            numSimParticleCollections: 1
            vetoDaughters: []
        }
    }

    //================================================================
    analyzers: {
        genCountLogger: {
            module_type: GenEventCountReader
        }

        hitTimesTrackerIn: {
            module_type: ExtremeHitTimes
	    inputs: [ "detectorFilter:tracker:flash" ]
        }
        hitTimesTrackerOut: {
            module_type: ExtremeHitTimes
	    inputs: [ "detectorFilter:tracker:flash-cut" ]
        }

        hitTimesCaloIn: {
            module_type: ExtremeHitTimes
	    inputs: [ "detectorFilter:calorimeter:flash",  "detectorFilter:calorimeterRO:flash" ]
        }
        hitTimesCaloOut: {
            module_type: ExtremeHitTimes
	    inputs: [ "detectorFilter:calorimeter:flash-cut",  "detectorFilter:calorimeterRO:flash-cut" ]
        }

	// tracker or calo
        hitTimesTOCIn: {
            module_type: ExtremeHitTimes
	    inputs: [ "detectorFilter:tracker:flash", "detectorFilter:calorimeter:flash",  "detectorFilter:calorimeterRO:flash" ]
        }
        hitTimesTOCOut: {
            module_type: ExtremeHitTimes
	    inputs: [ "detectorFilter:tracker:flash-cut", "detectorFilter:calorimeter:flash-cut",  "detectorFilter:calorimeterRO:flash-cut" ]
        }
    }

    //================================================================
    detPath : [trackerHits, caloHits, caloROHits, detectorFilter, compressPVDetector]
    trigger_paths  : [detPath]

    out : [beamFlashOutput]
    an : [genCountLogger, hitTimesTrackerIn, hitTimesTrackerOut, hitTimesCaloIn, hitTimesCaloOut, hitTimesTOCIn, hitTimesTOCOut]
    end_paths      : [out, an]
}

outputs: {
    beamFlashOutput : {
        module_type : RootOutput
        SelectEvents: [detPath]
        outputCommands:   [ "drop *_*_*_*",
                            "keep mu2e::GenParticles_*_*_*",
                            "keep mu2e::GenEventCount_*_*_*",
                            "keep mu2e::StatusG4_*_*_*",
                            "keep *_detectorFilter_*_flash-cut",
                            "keep *_compressPVDetector_*_flash-cut"
                          ]
        fileName: "sim.owner.flash-cut.version.sequencer.art"
    }

}

// Limit the amount of "Begin processing the ... record" messages
services.message.destinations.log.categories.ArtReport.reportEvery : 1
services.message.destinations.log.categories.ArtReport.limit : 1
services.message.destinations.log.categories.ArtReport.timespan : 300
