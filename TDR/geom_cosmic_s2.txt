#include "JobConfig/TDR/geom_baseline.txt"

// We start with cosmic ray hitting a detector volume.
// Let's not simulate any punch through that goes through the dirt
// after crossing the detector.  That loses the backsplash, but this
// should be a small effect compared to the "direct" CR background.
//
// Using "HallAir" as the killer is not safe; we'll need to be more
// creative.  List close by solids that intercept most of the punch
// through first,  then make sure any leftovers do not make
// showers outside of the hall.
vector<string> g4SteppingAction.killInTheseVolumes = { "HallConcreteFloor", "HallWalls", "HallConcreteCeiling",
                                                       "worldDirtBottom", 
                                                       "worldDirtNW", "worldDirtSW", "worldDirtSE", "worldDirtNE" };

// We do want to have trajectories for cosmic sims
double g4.mcTrajectoryMomentumCut =  1.;
double g4.mcTrajectoryDefaultMinPointDistance = 500.; // mm
vector<string> g4.mcTrajectoryVolumes = { "PSVacuum", "TS1Vacuum", "TS2Vacuum", "TS3Vacuum", "TS4Vacuum", "TS5Vacuum", "DS1Vacuum", "DS2Vacuum", "DS3Vacuum"};
vector<double> g4.mcTrajectoryVolumePtDistances = { 15., 15., 15., 15., 15., 15., 15., 15., 15. };

int g4.steppingActionMaxSteps = 50000;
int g4.particlesSizeLimit = 1000000;

double world.minimalMargin.xmin = 500000;
double world.minimalMargin.xmax = 500000;
double world.minimalMargin.zmin = 500000;
double world.minimalMargin.zmax = 500000;

double g4.minRangeCut     = 0.01;            // mm
bool g4.doCosmicKiller    = false;
int  g4.cosmicVerbose     = 0;

// Optimize for speed but where it does not impact the physics.
bool   g4.killLowEKine  = false;   // need to see all particles hitting the calorimeter
double g4.eKineMin      = -1.0;    // Kinetic energy in MeV: negative to use pdg id specific cuts
//
// Kill particles that can't give track momenta above 80 MeV/c.
// gammas 22, e+, e- 11:  p=ek
// protons 2212: 80 MeV/c = 3.4 MeV
// neutrons 2112: can knock out protons, use the same cut
//
// Charged pions: pi decay at rest gives 70 MeV/c electrons.
// Could cut them, need to figure out the value that boost electons
// to 80 MeV/c (or whatever the desired low cut is).
//
// mu+: similar to pi, need a cut
// mu-: keep them all
//
// Other unstable stuff: do not kill because because it could produce
// energetic tracks in decay.  Should not matter for speed as it is
// rear.
//
vector<int>    g4.killLowEKinePDG = { 22, 11, -11, 2212, 2112 };
vector<double> g4.eKineMinPDG     = { 80, 80.,  80, 3.4,  3.4 };


// This tells emacs to view this file in c++ mode.
// Local Variables:
// mode:c++
// End:
