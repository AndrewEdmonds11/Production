// This file contains the common part of job configuration for stage 3
// cosmic ray simulations.  It is included by top level files
// (like cosmic_s3_target1.fcl), which define output file names.
// 
// Ralf Ehrlich, 2015

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

# Give this job a name.
process_name : cosmics3

source : 
{ 
    module_type : RootInput 
}

services : 
{
   message               : @local::default_message
   TFileService          : { }
   RandomNumberGenerator : { }

   user : 
   {
      GeometryService        : { inputFile      : "JobConfig/cd3/geom_baseline.txt" }
      ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
      GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
      G4Helper               : { }
      SeedService            : @local::automaticSeeds
   }
}

physics : 
{
    producers: 
    {
                  protonTimeMap        : { module_type : GenerateProtonTimes }
                  muonTimeMap          : { module_type : GenerateMuonLife }

                  makeSD               : @local::makeSD
                  makeSH               : @local::makeSHfromSD
                  FSHPreStereo         : @local::FSHPreStereo
                  MakeStereoHits       : @local::MakeStereoHits
                  FlagStrawHits        : @local::FlagStrawHits
                  FlagBkgHits          : @local::FlagBkgHits
                  MakeCaloReadoutHits  : @local::MakeCaloReadoutHits
                  CaloCrystalHitsMaker : @local::CaloCrystalHitsMaker
                  TrkPatRec            : @local::TrkPatRecDownstreameMinus
    }

    filters: 
    {
                  TrkPatRecFilter : 
                  {
                     module_type : TrkPatRecFilter
                     fitterModuleLabels : [ "TrkPatRec" ]
                     trkPatRecInstances : [ "DownstreameMinus" ]
                     minMomentum :  50.0
                     maxMomentum : 200.0
                  }
    }

    analyzers: 
    {
        genCountLogger: 
        {
            module_type: GenEventCountReader
        }
    }

    trigFilter: [protonTimeMap, muonTimeMap, makeSD, makeSH, FSHPreStereo, MakeStereoHits, FlagStrawHits, FlagBkgHits, MakeCaloReadoutHits, CaloCrystalHitsMaker, TrkPatRec, TrkPatRecFilter]
    trigger_paths  : [trigFilter]

    an:  [genCountLogger]
    out: [filteredOutput]
    end_paths      : [an, out]
}

outputs: 
{
    filteredOutput : 
    {
        module_type : RootOutput
        SelectEvents: { SelectEvents: ["trigFilter"] }
        outputCommands:   [ "keep *_*_*_*" ]
    }
}

// Limit the amount of "Begin processing the ... record" messages
services.message.destinations.log.categories.ArtReport.reportEvery : 1
services.message.destinations.log.categories.ArtReport.limit : 1
services.message.destinations.log.categories.ArtReport.timespan : 300

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.user.SeedService.baseSeed         :  0
services.user.SeedService.maxUniqueEngines :  20

physics.producers.TrkPatRec.KalDiag.SimParticleLabel    : cosmicFilter
physics.producers.TrkPatRec.KalDiag.SimParticleInstance : ""

// We guarantee that our subruns are atomic. The following line is to not run out of memory.
services.scheduler.fileMode: MERGE
