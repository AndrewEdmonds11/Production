// Andrei Gaponenko, 2013

#include "minimalMessageService.fcl"
#include "standardProducers.fcl"
#include "standardServices.fcl"

# Give this job a name.
process_name : BeamPrimaryToTS3DS23

# Start form an empty source
source : {
    module_type : EmptyEvent
    maxEvents : 10
}

services : {

    message               : @local::default_message
    TFileService          : { fileName : "histBeamPrimaryToTS3DS23.root" }
    RandomNumberGenerator : { }

    user : {
        GeometryService        : { inputFile      : "JobConfig/TDR/geom_BeamPrimaryToTS3DS23.txt" }
        ConditionsService      : { conditionsfile : "Mu2eG4/test/conditions_01.txt"      }
        GlobalConstantsService : { inputFile      : "Mu2eG4/test/globalConstants_01.txt" }
        G4Helper               : { }
        SeedService            : @local::automaticSeeds
    }
}

physics : {
    producers: {
        generate: {
            module_type          : EventGenerator
            inputfile            : "JobConfig/TDR/genconfig_PrimaryProtons.txt"
        }

        genCounter: {
            module_type: GenEventCounter
        }

        g4run : {
            module_type          : G4
            generatorModuleLabel : generate
            doWriteLegacyPhysVolumeInfo : false
            simParticleNumberOffset : 0
            SDConfig : {
                enableSD : [ virtualdetector, CRV ] // activate just the explicitly listed SDs
                sensitiveVolumes: [ TS3Vacuum, DS2Vacuum, DS3Vacuum ]
            }
        }

        compressPV : {
            module_type: CompressPhysicalVolumes
            volumesInput : "g4run"

            hitInputs : [ "g4filter:TS3Vacuum",
                          "g4filter:DS2Vacuum",
                          "g4filter:DS3Vacuum",
                          "g4filter:CRV",
                          "g4filter:virtualdetector"
                        ]
            particleInputs : [ "g4filter:s0" ]
        }
    }

    filters: {
        g4filter: {
            module_type: FilterG4Out
            mainHitInputs : [ "g4run:TS3Vacuum", "g4run:DS2Vacuum", "g4run:DS3Vacuum", "g4run:CRV" ]
            extraHitInputs : [ "g4run:virtualdetector" ]
            numSimParticleCollections : 1
            vetoDaughters: []
        }
        g4status: {
            module_type: FilterStatusG4
            input: "g4run"
        }
    }

    trigFilter : [generate, genCounter, g4run, g4filter, compressPV ]
    g4StatusFilter : [generate, genCounter, g4run, g4status ]
    trigger_paths  : [trigFilter, g4StatusFilter]

    //e1 : [filteredOutput, filteredEvtsOutput, fullOutput]
    e1 : [filteredOutput, truncatedEvtsOutput]
    end_paths      : [e1]
}

outputs: {
    filteredOutput : {
        module_type : RootOutput
        outputCommands:   [ "keep *_*_*_*", "drop *_g4run_*_*", "keep mu2e::StatusG4_*_*_*" ]
        fileName    : "dataBeamPrimaryToTS3DS23.root"
    }

    truncatedEvtsOutput : {
        module_type : RootOutput
        SelectEvents: { SelectEvents: ["!g4StatusFilter"] }
        outputCommands:   [ "keep *_*_*_*", "drop *_g4filter_*_BeamPrimaryToTS3DS23", "drop *_compressPV_*_*"]
        fileName    : "truncatedBeamPrimaryToTS3DS23.root"
    }

    fullOutput : {
        module_type : RootOutput
        fileName    : "dataBeamPrimaryToTS3DS23_full.root"
    }

}

// Enable G4 graphics
//physics.producers.g4run.visMacro : "JobConfig/TDR/vis_muonTransport.mac"

// Initialze seeding of random engines: do not put these lines in base .fcl files for grid jobs.
services.user.SeedService.baseSeed         :  0
services.user.SeedService.maxUniqueEngines :  20
