// mono-energetic e- at the Al Ce endpoint
//

#include "TrackerMC/fcl/prolog.fcl"
#include "EventMixing/fcl/prolog.fcl"
#include "CaloMC/fcl/prolog.fcl"
#include "EventGenerator/fcl/prolog.fcl"
#include "Mu2eG4/fcl/prolog.fcl"
#include "CRVResponse/fcl/prolog_v07.fcl"
#include "fcl/minimalMessageService.fcl"
#include "fcl/standardServices.fcl"
#include "JobConfig/beam/prolog.fcl"

process_name: CeEndpoint

source: { module_type : EmptyEvent }
services: @local::Services.Sim
physics : { 
  producers : {
    generate : {
      module_type: StoppedParticleReactionGun
      verbosityLevel : 1
      genId : conversionGun 
      muonStops: @local::mu2e.tgtMuonStops
      physics: {
        pdgId : 11
        spectrumShape: CeEndpoint
        spectrumVariable: totalEnergy
      }
    }
    g4run : @local::mu2e.physics.producers.g4run.muons
    genCounter: { module_type: GenEventCounter }
    @table::TrackerMC.producers
    @table::CaloDigiMC.producers
    protonTimeMap: { module_type : GenerateProtonTimes }
    muonTimeMap: { module_type : GenerateMuonLife }
  }
  filters: {
    TrkDigiFilter : {
      module_type : StrawDigiMCFilter
      MinNDigis : 10
      MinParticleMom : 95.0
      particleTypes : [11]
    }
  }
  analyzers: {
    genCountLogger: { module_type: GenEventCountReader makeHistograms: false }
  }
  CeEndpointPath : [ generate, genCounter, g4run,
    protonTimeMap, muonTimeMap,
    @sequence::TrackerMC.DigiSim,
    TrkDigiFilter,
    @sequence::CaloDigiMC.DigiSim
  ]
}
outputs: {
   CeEndpointOutput : {
     module_type : RootOutput
     SelectEvents : [ CeEndpointPath ]
     fileName    : @nil
  }
}

services.TFileService.fileName: "nts.owner.CeEndpoint.version.sequencer.root"
outputs.CeEndpointOutput.fileName: "sim.owner.CeEndpoint.version.sequencer.art"
physics.out : [ CeEndpointOutput ]
physics.end_paths : [ out ] # needed for generate_fcl
# the following are overwritten by generate_fcl
services.SeedService.baseSeed         :  773651
services.SeedService.maxUniqueEngines :  20
