#
# generate and produce Detector Steps from a primary particle
#
# original author: Dave Brown, LBNL
#
#include "fcl/standardServices.fcl"
#include "EventGenerator/fcl/prolog.fcl"
#include "JobConfig/common/prolog.fcl"
#include "JobConfig/primary/prolog.fcl"
# name all processes the same, to mask any provenance in ensemble creation
process_name: Primary
# the following will change when we read art stops
source: { module_type : EmptyEvent }
services : @local::Services.Sim
physics : { 
  producers : { 
    @table::Common.producers 
    @table::Primary.producers 
  }
  filters : { 
    @table::Common.filters 
    @table::Primary.filters 
  }
  analyzers : { @table::Primary.analyzers }
  PrimaryPath : [ @sequence::Common.generateSequence, @sequence::Common.g4Sequence,  @sequence::Primary.PrimarySequence]
  EndPath : @local::Primary.EndPath
  trigger_paths : [ PrimaryPath ]
  end_paths : [ EndPath ]
}
outputs : { Output :@local::Primary.Output }
#
# final configuration
#
#include "JobConfig/common/epilog.fcl"
#include "JobConfig/primary/epilog.fcl"
