#
# Generate Eu152 source in front of STM detectors
#

#include "Offline/fcl/standardServices.fcl"
#include "Production/JobConfig/common/prolog.fcl"


process_name: Eu152

source : {
  module_type : EmptyEvent
  maxEvents : @nil
}

services : @local::Services.Sim
physics: {
  producers : {
    @table::Common.producers
    generate : { module_type: EventGenerator
    	       	 particleGun : { do : 1 }
		 inputfile : "Production/JobConfig/stm/simulation/Eu152.txt"
    }
  }
  filters : {
    @table::Common.filters
  }
  analyzers : {
    @table::Common.analyzers
  }
  # setup paths
  stmPath : [ generate, genCounter, @sequence::Common.g4Sequence, STMFilter ]
  trigger_paths: [ stmPath ]
  outPath : [ STMOutput ]
  end_paths: [outPath]
}

outputs: {

  STMOutput : {
    module_type: RootOutput
    outputCommands:   [ "drop *_*_*_*",
      "keep *_STMFilter_*_*",
      "keep *_genCounter_*_*"
    ]
    SelectEvents: [stmPath]
    fileName : "sim.owner.Eu152.version.sequencer.art"
  }
}

physics.filters.STMFilter : {
      module_type: FilterG4Out
      mainHitInputs : [ "g4run:stmDet1", "g4run:stmDet2" ] 
      extraHitInputs : [ "g4run:virtualdetector" ]
      vetoDaughters: []
}

#include "Production/JobConfig/common/epilog.fcl"

physics.producers.g4run.SDConfig.sensitiveVolumes : [ "stmDet1", "stmDet2" ] 
services.SeedService.baseSeed: 1225215210856415233

