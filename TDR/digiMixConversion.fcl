// There are two kinds of input files that are needed to run this job:
//
// - a framework input file, where each event corresponds to a 
//   Mu2e microbunch of background hits,
//
// - stopped muon inputs, which come in the form of a ROOT tree
//   in a plain ROOT file.
//
// Therefore when submitting grid jobs with mu2eart one need to specify the
// --inputs option, which provides a list of the background-only mixed files,
// and the --fclinput option, which provides stopped muon inputs. Here is an
// example of grid submission
//
// ## prepare event inputs.  Use only 1 file to run 1 job for this example.
// ls /mu2e/data/tdr/beam/mixp2/tdr.beam.mix.bg.1316b.14615792/good/*/data*.root | head -1 > events.txt
//
// # prepare stopped muon inputs.
// ls /mu2e/data/tdr/beam/g4s3p4/mergedMuonStops/*.root > mustops.txt
//
// # submit the job
// mu2eart --setup=setup.sh --fcl=JobConfig/TDR/digiMixConversion.fcl \
//         --fclinput=physics.producers.generate.muonStops.inputFiles:mustops.txt \
//         --inputs=events.txt \
//         --njobs=1 
//
//
// For non-grid tests see digiMixConversion_interactive.fcl
//
// Andrei Gaponenko, 2014

#include "JobConfig/TDR/defsDigiMix.fcl"

process_name : DigiMixConversion
services.TFileService.fileName: "histDigiMixConversion.root"
outputs.detectorOutput.fileName:  "dataDigiMixConversion.root"

physics.producers.generate: {
    module_type: StoppedMuonConversionGun
    muonStops: @local::muonStops
}
