# set the event timing for Onspill
physics.producers.EWMProducer.SpillType : 1
# minimal BField map
services.GeometryService.inputFile      : "Offline/Mu2eG4/geom/geom_common_reco.txt"
# add primary and mixers to the list of step producers.  Note the StrawDigi maker uses a general selector if no module is specified
physics.producers.makeSD.StrawGasStepModule : ""
# configure the mixin efficencies
physics.filters.EleBeamFlashMixer.mu2e.simStageEfficiencyTags: ["EleBeamCat", "EleBeamFlashCat" ]
physics.filters.MuBeamFlashMixer.mu2e.simStageEfficiencyTags: ["MuBeamCat", "MuBeamFlashCat" ]
physics.filters.NeutralsFlashMixer.mu2e.simStageEfficiencyTags: ["NeutralsCat", "NeutralsFlashCat" ]
physics.filters.MuStopPileupMixer.mu2e.simStageEfficiencyTags: ["MuBeamCat", "MuminusStopsCat", "MuStopPileupCat"]
physics.filters.MuStopPileupMixer.mu2e.meanEventsPerPOTFactors : [ @local::Pileup.MuminusTargetStopPrescale ]
# define the paths
physics.trigger_paths[0] : Triggered
physics.trigger_paths[1] : Untriggered
physics.end_paths : [ EndPath ]
# generic output: this is overwritten by the gen_Mix.sh script
outputs.TriggeredOutput.fileName: "dig.owner.MixTriggered.version.sequencer.art"
outputs.UntriggeredOutput.fileName: "dig.owner.MixUntriggered.version.sequencer.art"
# mixing requires the SimEfficiency tables
services.ProditionsService.simbookkeeper.useDb: true
# add trigger paths
#include "Offline/gen/fcl/Trigger/OnSpillTrigMenu/OnSpillTrigMenu.fcl"

