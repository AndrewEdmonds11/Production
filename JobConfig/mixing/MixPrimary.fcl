#
#  Mix pileup on top of a primary particle.  This is a form of OnSpill digitization
#
#include "JobConfig/digitize/prolog.fcl"
#include "JobConfig/mixing/prolog.fcl"
process_name: MixPrimary
source : { module_type : RootInput }
services : @local::Services.SimAndReco # reco is needed for the trigger
physics : { 
  producers : {
    @table::Digitize.producers
    @table::Trigger.producers 
  }
  filters: { 
    @table::Digitize.filters 
    @table::Trigger.filters
    @table::Mixing.filters
  }
  # setup 'trigger reject' stream after RejectEvents is implemented TODO!
  analyzers: { @table::Digitize.analyzers }
  MixPath : [ SignalFilter, @sequence::Mixing.PileupMixSequence, @sequence::Digitize.DigitizeSequence ]
  EndPath : @local::Digitize.EndPath
}
#
outputs : { 
  Output :@local::Digitize.Output
}
#
# Final configuration
#
#include "JobConfig/common/epilog.fcl"
#include "JobConfig/digitize/epilog.fcl"
# add trigger paths
#include "gen/fcl/Trigger/OnSpillTrigMenu/OnSpillTrigMenu.fcl"
# set the event timing for Onspill
physics.producers.EWMProducer.SpillType : 1
# add primary and mixers to the list of step producers.  Note the StrawDigi maker uses a general selector if no module is specified
physics.producers.makeSD.StrawGasStepModule : ""
physics.producers.compressDigiMCs.simParticleTags : [compressDetStepMCs, MuStopPileupMixer, BeamFlashMixer, NeutralsFlashMixer]
physics.producers.compressDigiMCs.caloShowerStepTags : [compressDetStepMCs, MuStopPileupMixer, BeamFlashMixer, NeutralsFlashMixer]
physics.producers.CaloShowerROMaker.caloShowerStepCollection : [compressDetStepMCs, MuStopPileupMixer, BeamFlashMixer, NeutralsFlashMixer ]
physics.producers.CrvPhotons.crvStepModuleLabels : [ compressDetStepMCs, MuStopPileupMixer, BeamFlashMixer, NeutralsFlashMixer ]
physics.producers.CrvPhotons.crvStepProcessNames : [ "","","","" ]
#
#physics.trigger_paths : [ MixPath ] incompatible with current trigger paths TODO
physics.end_paths : [ EndPath ]
# partial BField map
services.GeometryService.inputFile      : "Mu2eG4/geom/geom_common_reco.txt"
# generic output: this is overwritten by generate_fcl
outputs.Output.fileName: "dig.owner.description.version.sequencer.art"
